/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import controller.Controller_QLLop;
import java.io.FileOutputStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Chitiethocsinh;
import models.HocSinh;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Duc
 */
public class QL_Lop_DanhGia extends javax.swing.JFrame {
private int selectedRow = -1;
    /**
     * Creates new form QL_Lop_DanhGia
     */
    public QL_Lop_DanhGia() {
        initComponents();
      // setSize(1920, 1080);
        this.setLocationRelativeTo(null);
        txtMaLop.setEnabled(false);
        txtMaHocSinh.setEnabled(false);
        txtHoTen.setEnabled(false);
        connectedDanhGiaDB = new Controller_QLLop();
        creatTable();
        connectedDanhGiaDB.layDanhSachNamHoc(ComboBoxNienKhoa);
        String namHoc = ComboBoxNienKhoa.getSelectedItem().toString();
        connectedDanhGiaDB.layDanhSachLopHoc(namHoc, ComboboxLopHoc);
        updateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMSHS = new javax.swing.JTextField();
        ComboboxLopHoc = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        lopHocLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        NienKhoaLable1 = new javax.swing.JLabel();
        ComboBoxNienKhoa = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDanhGia = new javax.swing.JTextArea();
        maLopLabel1 = new javax.swing.JLabel();
        txtMaLop = new javax.swing.JTextField();
        maHocSinhLable1 = new javax.swing.JLabel();
        buttonExportFile = new javax.swing.JButton();
        txtMaHocSinh = new javax.swing.JTextField();
        buttonUpdate = new javax.swing.JButton();
        hoTenlabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        buttonTimKiem = new javax.swing.JButton();
        danhGialabel1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtMSHS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMSHSActionPerformed(evt);
            }
        });

        ComboboxLopHoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboboxLopHocItemStateChanged(evt);
            }
        });

        jLabel12.setText("MSHS");

        lopHocLabel1.setText("LỚP HỌC");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable1);

        NienKhoaLable1.setText("NIÊN KHÓA");

        ComboBoxNienKhoa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxNienKhoaItemStateChanged(evt);
            }
        });

        txtDanhGia.setColumns(20);
        txtDanhGia.setRows(5);
        jScrollPane2.setViewportView(txtDanhGia);

        maLopLabel1.setText("MÃ LỚP");

        maHocSinhLable1.setText("MÃ HỌC SINH");

        buttonExportFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/XuatFIle (1).png"))); // NOI18N
        buttonExportFile.setText("Xuất File");
        buttonExportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportFileActionPerformed(evt);
            }
        });

        txtMaHocSinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaHocSinhActionPerformed(evt);
            }
        });

        buttonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Save.png"))); // NOI18N
        buttonUpdate.setText("Cập Nhật");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        hoTenlabel1.setText("HỌ TÊN");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Bảng đánh giá học sinh");

        buttonTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Search.png"))); // NOI18N
        buttonTimKiem.setText("Tìm Kiếm");
        buttonTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTimKiemActionPerformed(evt);
            }
        });

        danhGialabel1.setText("ĐÁNH GIÁ");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel1.setText("ĐÁNH GIÁ HỌC SINH");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(hoTenlabel1)
                                .addGap(88, 88, 88))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(maHocSinhLable1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(NienKhoaLable1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lopHocLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(65, 65, 65)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboboxLopHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaLop, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaHocSinh, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboBoxNienKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(364, 364, 364)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(374, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(92, 92, 92)
                            .addComponent(maLopLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(871, 871, 871)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(745, 745, 745)
                            .addComponent(buttonTimKiem))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(765, 765, 765)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(92, 92, 92)
                            .addComponent(danhGialabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(932, 932, 932)
                            .addComponent(txtMSHS, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(390, 390, 390)
                            .addComponent(buttonExportFile, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(222, 222, 222)
                            .addComponent(buttonUpdate))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(566, 566, 566)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(79, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NienKhoaLable1)
                    .addComponent(ComboBoxNienKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboboxLopHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lopHocLabel1))
                .addGap(18, 18, 18)
                .addComponent(txtMaLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaHocSinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maHocSinhLable1))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoTenlabel1))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(110, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(104, 104, 104)
                            .addComponent(maLopLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(jLabel12))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(buttonTimKiem))
                        .addComponent(jLabel13)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(261, 261, 261)
                            .addComponent(danhGialabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(txtMSHS, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(376, 376, 376)
                            .addComponent(buttonExportFile, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(376, 376, 376)
                            .addComponent(buttonUpdate))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(91, 91, 91)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMSHSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMSHSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMSHSActionPerformed

    private void ComboboxLopHocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboboxLopHocItemStateChanged
        updateTable();
        clearText();
    }//GEN-LAST:event_ComboboxLopHocItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
                int selectedRow = jTable1.getSelectedRow();
        if(selectedRow != -1){
            String maHocSinh = tableModel.getValueAt(selectedRow, 0).toString();
            String tenHocSinh = tableModel.getValueAt(selectedRow, 1).toString();
            String maLop = tableModel.getValueAt(selectedRow, 2).toString();
            String danhGia = " ";
            if(tableModel.getValueAt(selectedRow, 3) != null){
                danhGia = tableModel.getValueAt(selectedRow, 3).toString();
            }

            txtMaHocSinh.setText(maHocSinh);
            txtMaLop.setText(maLop);
            txtHoTen.setText(tenHocSinh);
            txtDanhGia.setText(danhGia);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void ComboBoxNienKhoaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxNienKhoaItemStateChanged
                if (ComboBoxNienKhoa.getSelectedItem() != null) {
            String namHoc = ComboBoxNienKhoa.getSelectedItem().toString();
            connectedDanhGiaDB.layDanhSachLopHoc(namHoc, ComboboxLopHoc);
            updateTable();
        }
    }//GEN-LAST:event_ComboBoxNienKhoaItemStateChanged

    private void buttonExportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonExportFileActionPerformed

    private void txtMaHocSinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaHocSinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaHocSinhActionPerformed

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        updateDanhGia();
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTimKiemActionPerformed
       timKiemDanhGia();
    }//GEN-LAST:event_buttonTimKiemActionPerformed

    private void creatTable(){
         tableModel = (DefaultTableModel) jTable1.getModel();        // viet them
         tableModel.setColumnIdentifiers(new Object[]{               // tao cac thuoc tinh ten cua cot trong bang
         "Mã Học Sinh", "Tên Học Sinh " ,"Mã Lớp", "Đánh Giá ", 
        });
    }
    private void clearText(){
           txtMaHocSinh.setText("");
           txtHoTen.setText("");
           txtMaLop.setText("");
           txtDanhGia.setText("");
           updateTable();
           txtMSHS.setText("");
}
    private void updateTable(){
    List<HocSinh> listHocSinh = new ArrayList<>();
     listChiTiet = new ArrayList<>();
    if (ComboboxLopHoc.getSelectedItem() != null) {
        String tenLophoc = ComboboxLopHoc.getSelectedItem().toString();
        connectedDanhGiaDB.layDachSachDanhGia(tenLophoc, listHocSinh , listChiTiet);
        tableModel.setRowCount(0); // Xóa dữ liệu trong bảng hiện tại
        for (HocSinh hs : listHocSinh){
            for(Chitiethocsinh ct :listChiTiet )
            {
                if(hs.getMaHS().equals(ct.getMaHS())){
                    Object[] rowData = {
                        hs.getMaHS(),
                        hs.getHoTen(),
                        ct.getMaLop(),
                        ct.getDanhGia(),
                    };
                    tableModel.addRow(rowData);
                } 
            }
        }
    }
}
//    private void updateTable() {
//    Map<String, HocSinh> mapHocSinh = new HashMap<>();
//    Map<String, Chitiethocsinh> mapChiTiet = new HashMap<>();
//
//    if (ComboboxLopHoc.getSelectedItem() != null) {
//        String tenLophoc = ComboboxLopHoc.getSelectedItem().toString();
//        connectedDanhGiaDB.layDachSachDanhGia(tenLophoc, mapHocSinh, mapChiTiet);
//        tableModel.setRowCount(0); // Xóa dữ liệu trong bảng hiện tại
//
//        for (HocSinh hs : mapHocSinh.values()) {
//            Chitiethocsinh ct = mapChiTiet.get(hs.getMaHS());
//            if (ct != null) {
//                Object[] rowData = {
//                    hs.getMaHS(),
//                    hs.getHoTen(),
//                    ct.getMaLop(),
//                    ct.getDanhGia(),
//                };
//                tableModel.addRow(rowData);
//            }
//        }
//    }
//}
private void updateDanhGia(){
    Chitiethocsinh ct = new Chitiethocsinh();
    ct.setMaHS(txtMaHocSinh.getText());
    ct.setMaLop(txtMaLop.getText());
    ct.setMaLop(txtMaLop.getText());
    ct.setDanhGia(txtDanhGia.getText());
    
    connectedDanhGiaDB.updateDanhGiaDB(ct);
    updateTable();
    clearText();
}
private void timKiemDanhGia() {
    String MSHS = txtMSHS.getText().toString();
    List<HocSinh> listHocSinh = new ArrayList<>();
    listChiTiet = new ArrayList<>();
    if (ComboboxLopHoc.getSelectedItem() != null) {
        String tenLophoc = ComboboxLopHoc.getSelectedItem().toString();
        connectedDanhGiaDB.layDachSachDanhGia(tenLophoc, listHocSinh , listChiTiet);
        tableModel.setRowCount(0); // Xóa dữ liệu trong bảng hiện tại
        for (HocSinh hs : listHocSinh){
            for(Chitiethocsinh ct :listChiTiet )
            {
                if(hs.getMaHS().equals(ct.getMaHS()) && hs.getMaHS().equals(MSHS) ){
                    Object[] rowData = {
                        hs.getMaHS(),
                        hs.getHoTen(),
                        ct.getMaLop(),
                        ct.getDanhGia(),
                    };
                    tableModel.addRow(rowData);
                } 
            }
        }
    }
}
   private void xuatFile() {
        if (tableModel.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Không có dữ liệu để xuất Excel!");
            return;
        }

        Workbook workbook = new XSSFWorkbook();
        Sheet sheet = workbook.createSheet("Danh sách đánh giá");

        Row headerRow = sheet.createRow(0);
        for (int i = 0; i < tableModel.getColumnCount(); i++) {
            Cell cell = headerRow.createCell(i);
            cell.setCellValue(tableModel.getColumnName(i));
        }

        for (int row = 0; row < tableModel.getRowCount(); row++) {
            Row excelRow = sheet.createRow(row + 1);
            for (int column = 0; column < tableModel.getColumnCount(); column++) {
                Cell cell = excelRow.createCell(column);
                cell.setCellValue(tableModel.getValueAt(row, column).toString());
            }
        }

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss");
        LocalDateTime now = LocalDateTime.now();
        String namHoc = ComboBoxNienKhoa.getSelectedItem().toString();
        String tenLophoc = ComboboxLopHoc.getSelectedItem().toString();
        String fileName = namHoc +" " + tenLophoc + " " + "DanhSachDanhGiaHocSinh_" + dtf.format(now) + ".xlsx";

        try (FileOutputStream outputStream = new FileOutputStream(fileName)) {
            workbook.write(outputStream);
            JOptionPane.showMessageDialog(null, "Xuất file Excel thành công!\nTên file: " + fileName);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi khi xuất file Excel!");
        } finally {
            try {
                workbook.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QL_Lop_DanhGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QL_Lop_DanhGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QL_Lop_DanhGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QL_Lop_DanhGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QL_Lop_DanhGia().setVisible(true);
            }
        });
    }
private  DefaultTableModel tableModel;
private Controller_QLLop connectedDanhGiaDB;
private List<Chitiethocsinh> listChiTiet ;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxNienKhoa;
    private javax.swing.JComboBox<String> ComboboxLopHoc;
    private javax.swing.JLabel NienKhoaLable1;
    private javax.swing.JButton buttonExportFile;
    private javax.swing.JButton buttonTimKiem;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel danhGialabel1;
    private javax.swing.JLabel hoTenlabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lopHocLabel1;
    private javax.swing.JLabel maHocSinhLable1;
    private javax.swing.JLabel maLopLabel1;
    private javax.swing.JTextArea txtDanhGia;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMSHS;
    private javax.swing.JTextField txtMaHocSinh;
    private javax.swing.JTextField txtMaLop;
    // End of variables declaration//GEN-END:variables
}
